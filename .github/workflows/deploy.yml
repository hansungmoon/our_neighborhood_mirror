name: CI-CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: neighbor-build
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: our-neighbor
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: our-neighbor-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
        # [1]
      - name: Start MariaDB
        uses: getong/mariadb-action@v1.1
        with:                
#           mariadb version: '10.6.12' # Optional, default value is "latest". The version of the MariaDB
#           mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
#           mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'neighbor' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

        # [2]
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

        # [3]
      - name: Make zip file
        run:  |
          mkdir -p before-deploy
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/our_neighborhood.zip

        # [4]
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY}} 
          aws-secret-access-key: ${{ secrets.SECRET_KEY }} 
          aws-region: ${{ secrets.AWS_REGION }} 

        # [5]
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 deploy/our_neighborhood.zip s3://$S3_BUCKET_NAME/our_neighborhood.zip

        # [6]
      - name: Code Deploy
        run: | 
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=our_neighborhood.zip
