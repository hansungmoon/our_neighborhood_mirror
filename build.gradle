plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "2.2.3"
}

/**
 * npm install start
 * 참고 : https://jundragon.tistory.com/8
 */
node {
	version = '16.16.0'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")
}

task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}

copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib

/**
 * npm install end
 */

group = 'ywphsm'
version = '1.0.1-SNAPSHOT-' +new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'


/*
   plain.jar 파일 생성 안 되게 막음
 */
jar {
	enabled = false
}

// QureyDSL 에러
ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// spring-oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// H2 데이터 베이스
	runtimeOnly 'com.h2database:h2'

	// MySQL
	runtimeOnly 'mysql:mysql-connector-java'

	// MariaDB
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.8'

	//json-simple
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation group: 'org.json', name: 'json', version: '20200518'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

//   // QueryDSL spatial
//   // https://mvnrepository.com/artifact/com.querydsl/querydsl-sql-spatial
//   implementation group: 'com.querydsl', name: 'querydsl-sql-spatial', version: '5.0.0'

	// DB Spatial Type들 사용하기 위한 Library
	// https://mvnrepository.com/artifact/org.locationtech.jts/jts-core
	implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.19.0'

	// https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
	implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.5.Final'

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

	//이메일인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//coolSMS(휴대폰 문자 인증)
	implementation group: 'net.nurigo', name: 'javaSDK', version: '2.2'

	// devtools (개발 편의성 증대)
	implementation 'org.springframework.boot:spring-boot-devtools'

	// AWS S3
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'

	// spring-boot-start-test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// spring-security
	testImplementation 'org.springframework.security:spring-security-test'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

//tasks.named('test') {
//   useJUnitPlatform()
//}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}